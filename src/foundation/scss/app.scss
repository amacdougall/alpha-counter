@import "settings";
@import "foundation";
@import "compass/css3/border-radius";
@import "compass/css3/flexbox";

// NOTE: some defaults are defined in _settings.scss

$block-grid-default-spacing: 0.25rem;

$background-color: #fff0a5;

$toolbar-button-border-radius: 8px;

$content-horizontal-padding: 2vw;

$health-bar-height: 30px;
$health-bar-color: $warning-color;
$health-bar-damage-color: $alert-color;
$health-bar-border-radius: 8px;

$combo-width: 6vw;
$combo-height: 6vw;
$combo-underlap: 1vw;
$combo-color-idle: $success-color;
$combo-color-healing: #2f7289;
$combo-color-damage: $alert-color;

$team-health-width: 50vw - ($combo-width / 2) - $content-horizontal-padding + $combo-underlap;

// z-index presets
$z-index-front: 10; // we'll invent more as needed!

body {
  background-color: $background-color;
  
  &.night-mode {
    background-color: scale-color($background-color, $lightness: -92%);

    .health__name, .health__number {
      color: white;
    }
  }
}

.content {
  padding: 0 $content-horizontal-padding;
}

.button.selected {
  background-color: $success-color;
}

.button.activated {
  background-color: $alert-color;
}

.character-select {
  .list {
    margin: 0 -0.5vw; // negate margins of <li>s at edges

    @include flexbox((
      display: flex,
      flex-wrap: wrap,
      justify-content: center
    ));
  }

  li {
    list-style: none;
    width: 20vw;
    margin: 0.5vh 0.5vw;
  }

  .button {
    width: 100%;
    margin-bottom: 0; // ensure symmetrical grid; fits in iPad
  }
}

// block which includes life bars and combo readout
.counters {
  @include flexbox((
    display: flex,
    align-items: center
  ));
}

.team-health {
  width: $team-health-width;

  // TODO: figure out a better way of specifying this? This shit is crazy.
  &.right {
    .health {
      width: 100%;
      @include flexbox((
        display: flex,
        flex-direction: column,
        align-items: flex-end,
        justify-content: flex-start
      ));

      .health__health-bar {
        @include flexbox((
          display: flex,
          flex-direction: column,
          align-items: flex-start
        ))
      }
    }
  }
}

// block which includes life bars, name, and health for a single player
.health {
  cursor: pointer;
  width: 100%;

  @include flexbox((
    display: flex,
    flex-direction: column,
    justify-content: flex-start
  ))
}

.health.current {
  font-weight: bold;

  .health__damage {
    border: 4px black solid;
  }

  .health__health {
    border: 2px white solid;
  }
}

// container for health/damage bars
.health__health-bar {
  width: 100%;

  @include flexbox((
    display: flex,
    flex-direction: column,
    align-items: flex-end
  ))
}

.health__health {
  @include border-radius($health-bar-border-radius);
  background-color: $health-bar-color;
  height: $health-bar-height;
  margin-top: -($health-bar-height);
}

/* This background color is revealed as the health bar shrinks. */
.health__damage {
  @include border-radius($health-bar-border-radius);
  background-color: $health-bar-damage-color;
  width: 100%;
  height: $health-bar-height;
}

// div which contains running damage total, during a combo; "VS" otherwise
.combo {
  @include border-radius(8px);
  @include flexbox((
    display: flex,
    align-items: center,
    justify-content: center
  ));

  border: 2px black solid;
  width: $combo-width;
  height: $combo-height;
  margin: 0 -($combo-underlap);
  background-color: $combo-color-idle;
  z-index: $z-index-front;

  &.damage {
    background-color: $combo-color-damage;
  }

  &.healing {
    background-color: $combo-color-healing;
  }
}

.combo__text {
  color: white;
  font-size: 26px;
  font-weight: bold;
}

// damage button styles
.damage-buttons {
  @include block-grid(6);

  .button {
    width: 100%;
  }
}

.toolbar {
  .button {
    vertical-align: top;
    padding-top: 0.5rem;
    width: 7rem;
    height: 3rem;
    margin-right: 2px;

    @include border-bottom-left-radius($toolbar-button-border-radius);
    @include border-bottom-right-radius($toolbar-button-border-radius);

    @include flexbox((
      display: inline-flex,
      justify-content: center,
      align-items: center,
    ));
  }
}

.abilities {
  vertical-align: top;
  @include flexbox((
    display: inline-flex
  ));
}

// Or selectively include components
// @import
//   "foundation/components/accordion",
//   "foundation/components/alert-boxes",
//   "foundation/components/block-grid",
//   "foundation/components/breadcrumbs",
//   "foundation/components/button-groups",
//   "foundation/components/buttons",
//   "foundation/components/clearing",
//   "foundation/components/dropdown",
//   "foundation/components/dropdown-buttons",
//   "foundation/components/flex-video",
//   "foundation/components/forms",
//   "foundation/components/grid",
//   "foundation/components/inline-lists",
//   "foundation/components/joyride",
//   "foundation/components/keystrokes",
//   "foundation/components/labels",
//   "foundation/components/magellan",
//   "foundation/components/orbit",
//   "foundation/components/pagination",
//   "foundation/components/panels",
//   "foundation/components/pricing-tables",
//   "foundation/components/progress-bars",
//   "foundation/components/reveal",
//   "foundation/components/side-nav",
//   "foundation/components/split-buttons",
//   "foundation/components/sub-nav",
//   "foundation/components/switch",
//   "foundation/components/tables",
//   "foundation/components/tabs",
//   "foundation/components/thumbs",
//   "foundation/components/tooltips",
//   "foundation/components/top-bar",
//   "foundation/components/type",
//   "foundation/components/offcanvas",
//   "foundation/components/visibility";
